buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
        google()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${Version.androidGradlePlugin}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Version.baseKotlin}"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${Version.baseKotlin}"
        classpath "org.jetbrains.kotlinx:binary-compatibility-validator:${Version.binaryCompatibilityValidator}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${Version.dokkaGradlePlugin}"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:${Version.ktlintGradle}"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:${Version.spotlessPluginGradle}"
        classpath "org.jacoco:org.jacoco.core:${Version.jacocoGradlePlugin}"
        classpath "com.vanniktech:gradle-maven-publish-plugin:${Version.mavenPublishPlugin}"
        classpath "org.jetbrains.kotlinx:kover:${Version.kover}"
        classpath "com.squareup.anvil:gradle-plugin:${Version.anvilGradlePlugin}"
    }
}

apply plugin: 'binary-compatibility-validator'
apply plugin: 'kover'

apiValidation {

}

allprojects {
    repositories {
        mavenCentral()
        google()
        jcenter()
    }

    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    ktlint {
        version = Version.ktlint
        disabledRules = ["import-ordering"]
    }


    // Workaround to prevent Gradle from stealing focus from other apps during tests run/etc.
    // https://gist.github.com/artem-zinnatullin/4c250e04636e25797165
    tasks.withType(JavaForkOptions) {
        jvmArgs '-Djava.awt.headless=true'
    }
}

subprojects {
    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target 'src/**/*.kt'
        }
    }
}

allprojects {
    plugins.withId("com.vanniktech.maven.publish") {
        mavenPublish {
            sonatypeHost = "S01"
        }
    }
}

koverMerged {
    enable()

    xmlReport {
        onCheck.set(true)
        reportFile.set(layout.projectDirectory.file("kover/coverage.xml"))
    }

    htmlReport {
        onCheck.set(true)
        reportDir.set(layout.projectDirectory.dir("kover/html"))
    }

    verify {
        onCheck.set(true)
    }
}